{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/oracle/src/components/ProductDetails.vue?vue&type=template&id=1c354f03&scoped=true&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/oracle/src/components/ProductDetails.vue","mtime":1623511543831},{"path":"/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/oracle/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}