{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/yellowins/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/yellowins/src/components/templates/Header.vue?vue&type=template&id=4c4484d3&scoped=true&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/yellowins/src/components/templates/Header.vue","mtime":1625371680000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/yellowins/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/yellowins/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/yellowins/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/yellowins/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPHNjcm9sbC1maXhlZC1oZWFkZXIgOmZpeGVkLnN5bmM9ImZpeGVkIiA6dGhyZXNob2xkPSI1NiI+CiAgICA8ZGl2PgogICAgICA8Yi1uYXZiYXIgdG9nZ2xlYWJsZT0ibGciIHR5cGU9ImRhcmsiIHZhcmlhbnQ9ImRhcmsiPgogICAgICAgIDxiLW5hdmJhci1icmFuZCBocmVmPSIjIiBjbGFzcz0ibWwtMyI+CiAgICAgICAgICA8cm91dGVyLWxpbmsgdG89Ii8iPgogICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgOnNyYz0icmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2xvZ28teWVsbG93LnBuZycpIgogICAgICAgICAgICAgIGFsdD0iWWVsbG93aW5zIgogICAgICAgICAgICAgIHdpZHRoPSIyNTBweCIKICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZzogMjBweCIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvcm91dGVyLWxpbms+CiAgICAgICAgPC9iLW5hdmJhci1icmFuZD4KCiAgICAgICAgPGItbmF2YmFyLXRvZ2dsZSB0YXJnZXQ9Im5hdi1jb2xsYXBzZSI+PC9iLW5hdmJhci10b2dnbGU+CiAgICAgICAgPGItY29sbGFwc2UgaWQ9Im5hdi1jb2xsYXBzZSIgaXMtbmF2PgogICAgICAgICAgPGItbmF2YmFyLW5hdiBjbGFzcz0ibWwtYXV0byI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaCBtci00Ij4KICAgICAgICAgICAgICA8ZWwtaW5wdXQKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJTZWFyY2giCiAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWFyY2giCiAgICAgICAgICAgICAgICBpZD0icG9wb3Zlci0xIgogICAgICAgICAgICAgICAgaWNvbj0iZWwtaWNvbi1zZWFyY2giCiAgICAgICAgICAgICAgPjwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgPGkKICAgICAgICAgICAgICAgIGNsYXNzPSJmYSBmYS1zZWFyY2giCiAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNmOWI0MTA7IHBhZGRpbmc6IDEwcHgiCiAgICAgICAgICAgICAgPjwvaT4KICAgICAgICAgICAgICA8Yi1wb3BvdmVyCiAgICAgICAgICAgICAgICA6dGFyZ2V0PSJgcG9wb3Zlci0xYCIKICAgICAgICAgICAgICAgIHRyaWdnZXJzPSJjbGljayBmb2N1cyIKICAgICAgICAgICAgICAgIDpwbGFjZW1lbnQ9Iidib3R0b20nIgogICAgICAgICAgICAgICAgdGl0bGU9Ikhhc2lsIFBlbmNhcmlhbiIKICAgICAgICAgICAgICAgIHN0eWxlPSJwYWRkaW5nOiAwcHg7IHdpZHRoOiA0NTBweCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXgtaGVpZ2h0OiAzMDBweDsgb3ZlcmZsb3c6IGF1dG8iPgogICAgICAgICAgICAgICAgICA8Yi1saXN0LWdyb3VwIHN0eWxlPSJwYWRkaW5nOiAwcHg7IHdpZHRoOiAyMDBweCAhaW1wb3J0YW50Ij4KICAgICAgICAgICAgICAgICAgICA8Yi1saXN0LWdyb3VwLWl0ZW0KICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJwYWRkaW5nOiA4cHgiCiAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iKHgsIGluZGV4KSBpbiBzZWFyY2hSZXMiCiAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgICAgICAgICAgIDp0bz0iJy9wcm9kdWN0LycgKyB4Lm5hbWUucmVwbGFjZSgvXHMvZywgJysnKSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICB7eyB4Lm5hbWUgfX0KICAgICAgICAgICAgICAgICAgICA8L2ItbGlzdC1ncm91cC1pdGVtPgogICAgICAgICAgICAgICAgICA8L2ItbGlzdC1ncm91cD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvYi1wb3BvdmVyPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxiLW5hdi1pdGVtIHRvPSIvcHJlbWl1bSIgY2xhc3M9Im1yLTQiPlBSRU1JVU08L2ItbmF2LWl0ZW0+CiAgICAgICAgICAgIDxiLW5hdi1pdGVtIHRvPSIjIiBjbGFzcz0ibXItNCIgQGNsaWNrPSJkb3dubG9hZCI+CiAgICAgICAgICAgICAgRE9XTkxPQUQKICAgICAgICAgICAgPC9iLW5hdi1pdGVtPgogICAgICAgICAgICA8Yi1uYXYtaXRlbQogICAgICAgICAgICAgIHYtaWY9IiEkc3RvcmUuc3RhdGUudXNlci5uYW1lIgogICAgICAgICAgICAgIHYtYi1tb2RhbC5tb2RhbC1sb2dpbgogICAgICAgICAgICAgIGNsYXNzPSJtci01IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgTE9HSU4KICAgICAgICAgICAgPC9iLW5hdi1pdGVtPgoKICAgICAgICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gY2xhc3M9Im1yLTUiIHJpZ2h0IHYtZWxzZT4KICAgICAgICAgICAgICA8IS0tIFVzaW5nICdidXR0b24tY29udGVudCcgc2xvdCAtLT4KICAgICAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICAgICAgPHN0cm9uZz4KICAgICAgICAgICAgICAgICAge3sgJHN0b3JlLnN0YXRlLnVzZXIuY2F0ZWdvcnkgfHwgJHN0b3JlLnN0YXRlLnVzZXIubmFtZSB9fQogICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8Yi1kcm9wZG93bi10ZXh0IHN0eWxlPSJ3aWR0aDogMzAwcHgiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIj4KICAgICAgICAgICAgICAgICAgPGItbWVkaWEgdGFnPSJsaSI+CiAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNhc2lkZT4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgICAgOnNyYz0icmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2xvZ28yLnBuZycpIgogICAgICAgICAgICAgICAgICAgICAgICBibGFuawogICAgICAgICAgICAgICAgICAgICAgICBibGFuay1jb2xvcj0iI2FiYyIKICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjUwIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYWxpZ24tY29udGVudC1jZW50ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgIGFsdD0icGxhY2Vob2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtdC0wIG1iLTEiPnt7ICRzdG9yZS5zdGF0ZS51c2VyLm5hbWUgfX08L2g1PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTAiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdj57eyAkc3RvcmUuc3RhdGUudXNlci5lbWFpbCB9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz57eyAkc3RvcmUuc3RhdGUudXNlci5jYXRlZ29yeSB9fTwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2ItbWVkaWE+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvYi1kcm9wZG93bi10ZXh0PgogICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgPGItZHJvcGRvd24taXRlbQogICAgICAgICAgICAgICAgY2xhc3M9Imp1c3RpZnktY29udGVudC1jZW50ZXIgbXktYXV0byIKICAgICAgICAgICAgICAgIEBjbGljaz0ibG9nb3V0VXNlciIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBTaWduIE91dAogICAgICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICA8L2ItbmF2LWl0ZW0tZHJvcGRvd24+CiAgICAgICAgICA8L2ItbmF2YmFyLW5hdj4KICAgICAgICA8L2ItY29sbGFwc2U+CiAgICAgIDwvYi1uYXZiYXI+CiAgICA8L2Rpdj4KICA8L3Njcm9sbC1maXhlZC1oZWFkZXI+CiAgPCEtLSBtb2RhbCAtLT4KICA8Yi1tb2RhbCBpZD0ibW9kYWwtbG9naW4iIHYtbW9kZWw9Im1vZGFsTG9nIiB0aXRsZT0iTG9naW4iIGhpZGUtZm9vdGVyPgogICAgPGRpdiBjbGFzcz0iY2hpbGQiPgogICAgICA8Yi10YWJzIHYtbW9kZWw9InRhYiIgY29udGVudC1jbGFzcz0ibXQtMyIgZmlsbCBhbGlnbj0iY2VudGVyIj4KICAgICAgICA8Yi10YWIgYWN0aXZlPgogICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT4KICAgICAgICAgICAgPGg1IHN0eWxlPSJjb2xvcjogI2Y5YjQxMCI+TG9naW48L2g1PgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDxwPlNlbGFtYXQgZGF0YW5nIGtlbWJhbGk8L3A+CiAgICAgICAgICA8cCBzdHlsZT0iZm9udC1zaXplOiAxMnB4IiBjbGFzcz0ibXgtNSI+CiAgICAgICAgICAgIE1hc3Vra2FuIG5vbW9yIHRlbGVwb24gQW5kYSBkYW4ga2FtaSBha2FuIG1lbmdpcmlta2FuIGtvZGUKICAgICAgICAgICAgdmVyaWZpa2FzaSBBbmRhCiAgICAgICAgICA8L3A+CiAgICAgICAgICA8ZGl2CiAgICAgICAgICAgIGNsYXNzPSJtZC1mb3JtIgogICAgICAgICAgICBzdHlsZT0iCiAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlOwogICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1MHB4OwogICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNTBweDsKICAgICAgICAgICAgIgogICAgICAgICAgPgogICAgICAgICAgICA8IS0tIDxpPis2MjwvaT4gLS0+CiAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1zLmVtYWlsIgogICAgICAgICAgICAgIHR5cGU9ImVtYWlsIgogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbWFpbCIKICAgICAgICAgICAgICBzdHlsZT0iCiAgICAgICAgICAgICAgICBvdXRsaW5lOiAwOwogICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAwcHg7CiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMjMyMzIzOwogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFweDsKICAgICAgICAgICAgICAiCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwhLS0gIC0tPgogICAgICAgICAgPGRpdgogICAgICAgICAgICBjbGFzcz0ibWQtZm9ybSBtdC0zIgogICAgICAgICAgICBzdHlsZT0iCiAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlOwogICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1MHB4OwogICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNTBweDsKICAgICAgICAgICAgIgogICAgICAgICAgPgogICAgICAgICAgICA8IS0tIDxpPis2MjwvaT4gLS0+CiAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgIHR5cGU9InBhc3N3b3JkIgogICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1zLnBhc3N3b3JkIgogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJQYXNzd29yZCIKICAgICAgICAgICAgICBzdHlsZT0iCiAgICAgICAgICAgICAgICBvdXRsaW5lOiAwOwogICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAwcHg7CiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMjMyMzIzOwogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFweDsKICAgICAgICAgICAgICAiCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItdGFiPgogICAgICAgIDxiLXRhYj4KICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+CiAgICAgICAgICAgIDxoNSBzdHlsZT0iY29sb3I6ICNmOWI0MTAiPlJlZ2lzdGVyPC9oNT4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgY2xhc3M9Im1kLWZvcm0iCiAgICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlOwogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7CiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgICAgICAgICAgICAgIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHA+U2VsYW1hdCBkYXRhbmc8L3A+CiAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtc2l6ZTogMTJweCIgY2xhc3M9Im14LTUiPgogICAgICAgICAgICAgICAgU2lsYWhrYW4gbGVuZ2thcGkgZGF0YSBiZXJpa3V0IHVudHVrIG1lbmRhcGF0a2FuIGtvZGUKICAgICAgICAgICAgICAgIHZlcmlmaWthc2kKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgbGFiZWw9Ik5hbWE6IgogICAgICAgICAgICAgICAgICBsYWJlbC1mb3I9Im5lc3RlZC1zdHJlZXQiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWNvbHMtc209IjMiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWFsaWduLXNtPSJyaWdodCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dAogICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1zLm5hbWUiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9InctMTAwIgogICAgICAgICAgICAgICAgICAgIGlkPSJuZXN0ZWQtc3RyZWV0IgogICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+CiAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KCiAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwCiAgICAgICAgICAgICAgICAgIGxhYmVsPSJFbWFpbDoiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0ibmVzdGVkLWNpdHkiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWNvbHMtc209IjMiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWFsaWduLXNtPSJyaWdodCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dAogICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1zLmVtYWlsIgogICAgICAgICAgICAgICAgICAgIHR5cGU9ImVtYWlsIgogICAgICAgICAgICAgICAgICAgIGlkPSJuZXN0ZWQtY2l0eSIKICAgICAgICAgICAgICAgICAgPjwvYi1mb3JtLWlucHV0PgogICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CgogICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cAogICAgICAgICAgICAgICAgICBsYWJlbD0iUGhvbmU6IgogICAgICAgICAgICAgICAgICBsYWJlbC1mb3I9Im5lc3RlZC1zdGF0ZSIKICAgICAgICAgICAgICAgICAgbGFiZWwtY29scy1zbT0iMyIKICAgICAgICAgICAgICAgICAgbGFiZWwtYWxpZ24tc209InJpZ2h0IgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybXMucGhvbmUiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0ibnVtYmVyIgogICAgICAgICAgICAgICAgICAgIGlkPSJuZXN0ZWQtc3RhdGUiCiAgICAgICAgICAgICAgICAgID48L2ItZm9ybS1pbnB1dD4KICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgoKICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgbGFiZWw9IkFsYW1hdDoiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWZvcj0ibmVzdGVkLWNvdW50cnkiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWNvbHMtc209IjMiCiAgICAgICAgICAgICAgICAgIGxhYmVsLWFsaWduLXNtPSJyaWdodCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1pbnB1dAogICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm1zLmFkZHJlc3MiCiAgICAgICAgICAgICAgICAgICAgaWQ9Im5lc3RlZC1jb3VudHJ5IgogICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+CiAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgbGFiZWw9InBhc3N3b3JkOiIKICAgICAgICAgICAgICAgICAgbGFiZWwtZm9yPSJuZXN0ZWQtY291bnRyeSIKICAgICAgICAgICAgICAgICAgbGFiZWwtY29scy1zbT0iMyIKICAgICAgICAgICAgICAgICAgbGFiZWwtYWxpZ24tc209InJpZ2h0IgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybXMucGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgaWQ9Im5lc3RlZC1jb3VudHJ5IgogICAgICAgICAgICAgICAgICA+PC9iLWZvcm0taW5wdXQ+CiAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItdGFiPgogICAgICA8L2ItdGFicz4KICAgICAgPHAgc3R5bGU9ImZvbnQtc2l6ZTogMTJweCIgQGNsaWNrPSJtb2RhbFZlciA9IHRydWUiIGNsYXNzPSJteC01IG10LTQiPgogICAgICAgIEtsaWsgamlrYSBzZWJlbHVtbnlhIHN1ZGFoIHB1bnlhIGtvZGUgb3RwCiAgICAgIDwvcD4KICAgICAgPCEtLSA8c3BhbiBAY2xpY2s9Im1vZGFsVmVyPXRydWUiPjwvc3Bhbj4gLS0+CiAgICAgIDxiLWJ1dHRvbgogICAgICAgIHZhcmlhbnQ9ImxpZ2h0IgogICAgICAgIEBjbGljaz0iaGlkZU1vZGFsIgogICAgICAgIHN0eWxlPSJ3aWR0aDogNTAlIgogICAgICAgIGNsYXNzPSJtdC00IG1iLTIiCiAgICAgID4KICAgICAgICB7eyB0YWIgPT0gMCA/ICJLaXJpbSIgOiAiRGFmdGFyIiB9fQogICAgICA8L2ItYnV0dG9uPgogICAgPC9kaXY+CiAgPC9iLW1vZGFsPgogIDxiLW1vZGFsCiAgICB2LW1vZGVsPSJtb2RhbFZlciIKICAgIGlkPSJtb2RhbC12ZXJpZmljYXRpb24iCiAgICB0aXRsZT0iVmVyaWZpa2FzaSIKICAgIGhpZGUtZm9vdGVyCiAgPgogICAgPGRpdiBjbGFzcz0iY2hpbGQiPgogICAgICA8aDUgc3R5bGU9ImNvbG9yOiAjZjliNDEwIj5WZXJpZmljYXRpb248L2g1PgogICAgICA8cD5TZWxhbWF0IGRhdGFuZyBrZW1iYWxpPC9wPgogICAgICA8cCBzdHlsZT0iZm9udC1zaXplOiAxMnB4IiBjbGFzcz0ibXgtNSI+CiAgICAgICAgRW50ZXIgeW91ciB2ZXJpZmljYXRpb24gY29kZSBiZWxvdyB0aGF0IHdlIHNlbmQgdG8geW91LiB3ZSBzZW5kIHRvCiAgICAgICAgeW91ciBFbWFpbAogICAgICAgIDwhLS0ge3sgaW5PdHAgfX0gLS0+CiAgICAgIDwvcD4KICAgICAgPGRpdj4KICAgICAgICA8IS0tIDxpbnB1dAogICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgIG1heGxlbmd0aD0iMSIKICAgICAgICAgIGNsYXNzPSJ2ZXJpZiBteC0yIgogICAgICAgICAgdi1mb3I9InggaW4gNiIKICAgICAgICAgIDprZXk9IngiCiAgICAgICAgICB2LW1vZGVsPSJvdHBbYGYke3h9YF0iCiAgICAgICAgICA6cGxhY2Vob2xkZXI9IngiCiAgICAgICAgLz4gLS0+CiAgICAgICAgPGItcm93IGFsaWduLXY9ImNlbnRlciIgYWxpZ24taD0iY2VudGVyIj4KICAgICAgICAgIDxiLWNvbAogICAgICAgICAgICBjb2xzPSIxMCIKICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTsgd2lkdGg6IDkwcHgiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgIHYtaWY9IiFmb3Jtcy5lbWFpbCIKICAgICAgICAgICAgICB0eXBlPSJudW1iZXIiCiAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybXMuZW1haWwiCiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik1hc3Vra2FuIEVtYWlsIHlhbmcgc3VkYWggdGVyZGFmdGFyIgogICAgICAgICAgICAgIGNsYXNzPSJtZC1mb3JtIG10LTMiCiAgICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICAgICAgb3V0bGluZTogMDsKICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4OwogICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzIzMjMyMzsKICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcHg7CiAgICAgICAgICAgICAgIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgIDxiLWNvbAogICAgICAgICAgICBjb2xzPSIxMCIKICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTsgd2lkdGg6IDkwcHgiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgIHR5cGU9Im51bWJlciIKICAgICAgICAgICAgICB2LW1vZGVsPSJmb3Jtcy5vdHAiCiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik1hc3Vra2FuIEtvZGUgT1RQIgogICAgICAgICAgICAgIGNsYXNzPSJtZC1mb3JtIG10LTMiCiAgICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICAgICAgb3V0bGluZTogMDsKICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4OwogICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzIzMjMyMzsKICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcHg7CiAgICAgICAgICAgICAgIgogICAgICAgICAgICAvPgogICAgICAgICAgPC9iLWNvbD4KICAgICAgICA8L2Itcm93PgogICAgICA8L2Rpdj4KICAgICAgPGItYnV0dG9uCiAgICAgICAgQGNsaWNrPSJ2ZXJpZmljYXRpb24iCiAgICAgICAgdmFyaWFudD0ibGlnaHQiCiAgICAgICAgc3R5bGU9IndpZHRoOiA1MCUiCiAgICAgICAgY2xhc3M9Im10LTQgbWItMiIKICAgICAgPgogICAgICAgIExvZ2luCiAgICAgIDwvYi1idXR0b24+CiAgICA8L2Rpdj4KICA8L2ItbW9kYWw+CiAgPGItbW9kYWwKICAgIGlkPSJtb2RhbC1iYW5rIgogICAgdi1tb2RlbD0iJHN0b3JlLnN0YXRlLm1vZGFsQmFuayIKICAgIHRpdGxlPSJCb290c3RyYXBWdWUiCiAgICBoaWRlLWZvb3RlcgogID4KICAgIDxkaXYgY2xhc3M9ImNoaWxkIj4KICAgICAgPGg1IHN0eWxlPSJjb2xvcjogI2Y5YjQxMCI+U2lsYWhrYW4gUGlsaWggQmFuazwvaDU+CgogICAgICA8cCBzdHlsZT0iZm9udC1zaXplOiAxMnB4IiBjbGFzcz0ibXgtNSI+CiAgICAgICAgS2FtaSBha2FuIG1lbWJlcmkgQW5kYSBpbnN0cnVrc2kgdGVudGFuZyBjYXJhIG1lbnllbGVzYWlrYW4gdHJhbnNmZXIKICAgICAgICBkaSBBVE0gYXRhdSBkaSBhcGxpa2FzaSBNb2JpbGUgQmFua2luZwogICAgICA8L3A+CiAgICAgIDxkaXY+CiAgICAgICAgPGItZm9ybS1zZWxlY3QKICAgICAgICAgIHN0eWxlPSJ3aWR0aDogODAlIgogICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWQucGF5bWVudCIKICAgICAgICAgIDpvcHRpb25zPSJvcHRQYXltZW50cyIKICAgICAgICA+PC9iLWZvcm0tc2VsZWN0PgogICAgICAgIDxkaXYgY2xhc3M9Im10LTMiIHN0eWxlPSJ0ZXh0LWFsaWduLWxhc3Q6IGxlZnQiPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQ+S29kZSBwZW1iYXlhcmFuPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgcGF5bWVudC5idXNpbmVzc19pZCB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQ+SnVtbGFoPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgZm9ybWF0UHJpY2UoJHN0b3JlLnN0YXRlLmZvcm1zLnB1bHNhX3ByaWNlKSB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQ+S29kZSBCYW5rPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgcGF5bWVudC5uYW1lIH19PC90ZD4KICAgICAgICAgIDwvdHI+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxiLWJ1dHRvbgogICAgICAgICAgQGNsaWNrPSJuZXh0U3RlcCIKICAgICAgICAgIHZhcmlhbnQ9ImxpZ2h0IgogICAgICAgICAgc3R5bGU9IndpZHRoOiA1MCUiCiAgICAgICAgICBjbGFzcz0iY2hpbGQgbXQtNCBtYi0yIgogICAgICAgID4KICAgICAgICAgIExhbmp1dAogICAgICAgIDwvYi1idXR0b24+CiAgICAgIDwvZGl2PgogICAgICA8IS0tIDxiLWJ1dHRvbiB2YXJpYW50PSJsaWdodCIgc3R5bGU9IndpZHRoOiA1MCUiIGNsYXNzPSJjaGlsZCBtdC00IG1iLTIiPgogICAgICAgIExhbmp1dAogICAgICA8L2ItYnV0dG9uPiAtLT4KICAgIDwvZGl2PgogIDwvYi1tb2RhbD4KICA8Yi1tb2RhbAogICAgaWQ9Im1vZGFsLWRldGFpbCIKICAgIHYtbW9kZWw9Im1vZGFsRGV0YWlsIgogICAgdGl0bGU9IkJvb3RzdHJhcFZ1ZSIKICAgIGhpZGUtZm9vdGVyCiAgICBAY2xvc2U9IiRlbWl0KCdjYW5jZWwnLCBmYWxzZSkiCiAgPgogICAgPGRpdiBjbGFzcz0iIj4KICAgICAgPGg1IHN0eWxlPSJjb2xvcjogI2Y5YjQxMCIgY2xhc3M9ImNoaWxkIj5EZXRhaWwgUGVzYW5hbjwvaDU+CiAgICAgIDxwIHN0eWxlPSJmb250LXNpemU6IDEycHgiIGNsYXNzPSJjaGlsZCBteC01Ij4KICAgICAgICBNb2hvbiBrb25maXJtYXNpIHBlbWJheWFyYW4gYW5kYSBzdWRhaCBiZW5hci4KICAgICAgPC9wPgogICAgICA8ZGl2PgogICAgICAgIDx0YWJsZSBjbGFzcz0ibXQtNCIgYm9yZGVyPSIwIj4KICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPk5hbWE8L3RkPgogICAgICAgICAgICA8dGQ+OiB7eyAkc3RvcmUuc3RhdGUuZm9ybXMucHVsc2Ffb3AgfX08L3RkPgogICAgICAgICAgPC90cj4KICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPklEPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgJHN0b3JlLnN0YXRlLmZvcm1zLnB1bHNhX2NvZGUgfX08L3RkPgogICAgICAgICAgPC90cj4KICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPkhhcmdhPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgZm9ybWF0UHJpY2UoJHN0b3JlLnN0YXRlLmZvcm1zLnB1bHNhX3ByaWNlKSB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQ+QmF5YXIgZGVuZ2FuPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgJHN0b3JlLnN0YXRlLmZvcm1zLnBheW1lbnQgfX08L3RkPgogICAgICAgICAgPC90cj4KICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPk9yZGVyIGlkPC90ZD4KICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgIDoKICAgICAgICAgICAgICB7eyBvcmRlcklkIH19CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQ+VHJhbnNhY3Rpb24gaWQ8L3RkPgogICAgICAgICAgICA8dGQ+OiBJTlYve3sgb3JkZXJJZCB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQ+U3RhdHVzPC90ZD4KICAgICAgICAgICAgPHRkPjoge3sgJHN0b3JlLnN0YXRlLmZvcm1zLnN0YXR1cyB9fTwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICAgIDwvZGl2PgogICAgICA8Yi1idXR0b24KICAgICAgICBAY2xpY2s9Im5leHRTdGVwIgogICAgICAgIHZhcmlhbnQ9ImxpZ2h0IgogICAgICAgIHN0eWxlPSJ3aWR0aDogNTAlIgogICAgICAgIGNsYXNzPSJtdC00IG14LWF1dG8gbWItMiIKICAgICAgPgogICAgICAgIExhbmp1dAogICAgICA8L2ItYnV0dG9uPgogICAgPC9kaXY+CiAgPC9iLW1vZGFsPgogIDwhLS0gbW9kYWwgZW5kIC0tPgo8L2Rpdj4K"},null]}